JFDML JFormDesigner: "6.0.6.2.195" Java: "1.8.0_152-release" encoding: "UTF-8"

new FormModel {
	contentType: "form/swing"
	root: new FormRoot {
		add( new FormWindow( "javax.swing.JFrame", new FormLayoutManager( class org.jdesktop.layout.GroupLayout ) {
			"$horizontalGroup": "par l {seq l {comp scrollPane1:::p:600:p, space s:::p, par l {comp lightenButton::l:p:144:p, comp darkerButton::l:p:144:p}, space :p:85:p, par l {comp textFieldRed:::p:121:p, comp label1:::p::p, comp label3::l:p::p, comp textFieldGreen:::p:116:p, comp label2::l:p::p, comp textFieldBlue::l:p:116:p, comp acceptButton::l:p::p}, space :0:55:x}, seq {par l {seq l {space :p:29:p, par l {seq {par l {comp label4:::p::p, comp tresholdTextField::l:::x}, space :p:213:p}, seq l {space :6:6:p, comp thresholdCheckBox:::p:156:p, space :::x}}}, seq l {space :p:81:p, comp makeBinarizationButton:::p::p, space :p:284:p}}, par l {comp label5::l:p:188:p, comp label6::l:p::p, comp bersenTresholdTextField:::p:165:p, comp label7::l:p::p, comp setThresholdBersenTextField:::p:159:p}, space ::392:x}, seq t {space :0:477:x, comp button1:::p::p, space :p:468:p}}"
			"$verticalGroup": "par l {seq l {par l {comp scrollPane1:::p:400:p, seq l {space :::p, par b {comp lightenButton::b:p::p, comp label1::b:p::p}, space :::p, par l {comp darkerButton:::p::p, comp textFieldRed::l:p::p}, space :::p, comp label3:::p::p, space :::p, comp textFieldGreen:::p::p, space :::p, comp label2:::p::p, space :::p, comp textFieldBlue:::p::p, space :::p, comp acceptButton:::p::p}}, par l {seq l {space :p:30:p, comp label4:::p::p, space :::p, comp tresholdTextField:::p::p, space :::p, comp thresholdCheckBox:::::x, space :::p, comp makeBinarizationButton:::p::p, space :p:87:p}, seq l {space :::p, comp label5:::p:26:p, space :::p, comp label6:::p::p, space :::p, comp bersenTresholdTextField:::p::p, space u:::p, comp label7:::p::p, space u:::p, comp setThresholdBersenTextField:::p::p, space :::p, comp button1:::p::p, space ::37:x}}}}"
		} ) {
			name: "this"
			add( new FormContainer( "javax.swing.JScrollPane", new FormLayoutManager( class javax.swing.JScrollPane ) ) {
				name: "scrollPane1"
				add( new FormComponent( "javax.swing.JLabel" ) {
					name: "imageLabel"
				} )
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "label1"
				"text": "red"
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "label2"
				"text": "blue"
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "label3"
				"text": "green"
			} )
			add( new FormComponent( "javax.swing.JTextField" ) {
				name: "textFieldRed"
			} )
			add( new FormComponent( "javax.swing.JTextField" ) {
				name: "textFieldGreen"
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "acceptButton"
				"text": "change"
			} )
			add( new FormComponent( "javax.swing.JTextField" ) {
				name: "textFieldBlue"
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "lightenButton"
				"text": "lighten"
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "lightenButtonActionPerformed", true ) )
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "darkerButton"
				"text": "darker"
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "darkerButtonActionPerformed", true ) )
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "label4"
				"text": "Treshold parametr to binarization"
			} )
			add( new FormComponent( "javax.swing.JTextField" ) {
				name: "tresholdTextField"
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "makeBinarizationButton"
				"text": "Make"
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "makeBinarizationButtonActionPerformed", true ) )
			} )
			add( new FormComponent( "javax.swing.JCheckBox" ) {
				name: "thresholdCheckBox"
				"text": "setOnMainWindow"
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "label5"
				"text": "Bernsen binarization"
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "label6"
				"text": "threshold"
			} )
			add( new FormComponent( "javax.swing.JTextField" ) {
				name: "bersenTresholdTextField"
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "label7"
				"text": "set_treshold parametr"
			} )
			add( new FormComponent( "javax.swing.JTextField" ) {
				name: "setThresholdBersenTextField"
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "button1"
				"text": "make"
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "button1ActionPerformed", true ) )
			} )
			menuBar: new FormContainer( "javax.swing.JMenuBar", new FormLayoutManager( class javax.swing.JMenuBar ) ) {
				name: "menuBar1"
				add( new FormContainer( "javax.swing.JMenu", new FormLayoutManager( class javax.swing.JMenu ) ) {
					name: "menu1"
					"text": "file"
					add( new FormComponent( "javax.swing.JMenuItem" ) {
						name: "loadImageButton"
						"text": "load"
					} )
					add( new FormComponent( "javax.swing.JMenuItem" ) {
						name: "saveImageButton"
						"text": "save"
					} )
				} )
				add( new FormContainer( "javax.swing.JMenu", new FormLayoutManager( class javax.swing.JMenu ) ) {
					name: "menu2"
					"text": "histogram"
					add( new FormComponent( "javax.swing.JMenuItem" ) {
						name: "showHistogramButton"
						"text": "show histograms"
						addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "showHistogramButtonActionPerformed", true ) )
					} )
					add( new FormComponent( "javax.swing.JMenuItem" ) {
						name: "histogramEqualizationMenuItem"
						"text": "histogram equalization"
						addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "histogramEqualizationMenuItemActionPerformed", true ) )
					} )
					add( new FormComponent( "javax.swing.JMenuItem" ) {
						name: "histogramStretchingMenuItem"
						"text": "histogram stretching "
						addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "histogramStretchingMenuItemActionPerformed", true ) )
					} )
				} )
				add( new FormContainer( "javax.swing.JMenu", new FormLayoutManager( class javax.swing.JMenu ) ) {
					name: "menu3"
					"text": "change to gray "
					add( new FormComponent( "javax.swing.JMenuItem" ) {
						name: "redChangeMenuItem"
						"text": "red change"
						addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "redChangeMenuItemActionPerformed", true ) )
					} )
					add( new FormComponent( "javax.swing.JMenuItem" ) {
						name: "greenChangeMenuItem"
						"text": "green change"
						addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "greenChangeMenuItemActionPerformed", true ) )
					} )
					add( new FormComponent( "javax.swing.JMenuItem" ) {
						name: "blueChangeMenuItem"
						"text": "blue change"
						addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "blueChangeMenuItemActionPerformed", true ) )
					} )
					add( new FormComponent( "javax.swing.JMenuItem" ) {
						name: "averangeChangeMenuItem"
						"text": "averange change"
						addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "averangeChangeMenuItemActionPerformed", true ) )
					} )
					add( new FormComponent( "javax.swing.JMenuItem" ) {
						name: "menuItem4"
						"text": "get all"
						addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "menuItem4ActionPerformed", true ) )
					} )
				} )
				add( new FormContainer( "javax.swing.JMenu", new FormLayoutManager( class javax.swing.JMenu ) ) {
					name: "menu4"
					"text": "binarization"
					add( new FormComponent( "javax.swing.JMenuItem" ) {
						name: "otsuMenuItem"
						"text": "otsu"
						addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "otsuMenuItemActionPerformed", true ) )
					} )
				} )
			}
		}, new FormLayoutConstraints( null ) {
			"location": new java.awt.Point( 0, 15 )
			"size": new java.awt.Dimension( 1025, 690 )
		} )
	}
}
